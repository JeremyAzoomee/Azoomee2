buildscript {
    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }
    dependencies {
        // The Fabric Gradle plugin uses an open ended version to
        // react quickly to Android tooling updates
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.5'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 22
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.tinizine.azoomee"
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 323101
        versionName "3.2.3"
    }
    
    splits {
    	abi {
      		enable true
      		reset()
      		include 'armeabi-v7a'
      		universalApk false
    	}
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

repositories {
	mavenLocal()
    maven {
        url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2'
    }
    maven { url 'https://maven.fabric.io/public' }

}

crashlytics {
    enableNdk true
    androidNdkOut 'obj'
    androidNdkLibsOut 'libs'
}

play {
    track = 'beta'
    serviceAccountEmail = 'app-uploader@api-8652937103049796797-14532.iam.gserviceaccount.com'
    pk12File = file('../../../android_signing_key/appuploader.p12')
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'jars')
    compile project(':libcocos2dx')
    compile 'org.xwalk:xwalk_core_library:23.53.589.4-shared'
    compile 'com.mixpanel.android:mixpanel-android:4.+'
    compile 'com.google.android.gms:play-services-base:10.2.0'
    compile 'com.google.android.gms:play-services-gcm:10.2.0'
    compile 'com.google.android.gms:play-services-ads:10.2.0'
    // Crashlytics Kit
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true
    }
    // NDK Kit
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.5@aar') {
        transitive = true
    }
    compile 'com.appsflyer:af-android-sdk:4+@aar'
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
